
//a[i] + a[j] + a[k] == 0 i!=j , j!=k, k!=i

class Solution {
   public List<List<Integer>> threeSum(int[] nums) {
    Arrays.sort(nums);
    List<List<Integer>> list = new ArrayList<List<Integer>>();
    for (int i= 0; i < nums.length-2; i++){
        if ( ( i > 0) && (nums[i] == nums[i-1]) ) continue; // to avoid duplicates when i is greater than zero
        for (int j = i+1, k=nums.length-1; j < k ;){
            if (nums[i] + nums[j] + nums[k] == 0){
                list.add(Arrays.asList(nums[i], nums[j], nums[k]));
                j++; k--;
                while ((j < k) && (nums[j] == nums[j-1])) j++;// to eliminate the duplicates of j that to withitn the boundary 
                while ((j < k) && (nums[k] == nums[k+1])) k--;//to eliminate the duplicates of k that to withitn the boundary
            }//result condition done need to check j and again because it was moved inside the loop
        
            else if (nums[i] + nums[j] + nums[k] > 0) k--;
                 else j++;
        }
    }return list;
}
}
