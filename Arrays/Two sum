//Input: nums = [2,7,11,15], target = 9
//Output: [0,1]
//Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].



class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap <Integer, Integer> hm = new HashMap<>();
        int [] res = new int [2];
        for(int i = 0; i < nums.length; ++i){
            int value = (target - nums[i]);
           // System.out.println(value);
            if(hm.containsKey(value)){
                res[0] = hm.get(value);
                 //System.out.println(i);
                res[1] = i;
                break;   //mistakes done : forgot to break
            }
            else{
                hm.put(nums[i],i);//mistakes done : used value instead of storing array of i
            }

        }return res;
        
    }
}
