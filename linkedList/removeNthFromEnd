/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummy = new ListNode (0);
        ListNode fast = dummy, slow = dummy;
        dummy.next = head;
        int count = 1;
        if (head == null || head.next == null){return null;}
        while (count < n + 1){
            fast = fast.next;
            count++;
        }
        
        while (fast != null && fast.next != null){
           fast = fast.next;
           slow = slow.next;
        }
        slow.next = (slow.next != null) ? slow.next.next : null;
        return dummy.next;
    }
}
