 

// find the minimum in the rotated but sorted Array
//4 < 5 < 6 < 7 < 8 > 1 < 2 < 3 i can able to find the ans when mid is 8 by comparing with mid + 1  and 1 by  comparing it with mid -1 

class Solution {
    public int findMin(int[] nums) {
        int n = nums.length;
        int ans = Integer.MAX_VALUE;
        int l = 0, r = n-1,  mid;
        if (nums.length == 1  || (nums[l] < nums[r]) ) return nums[0];   // if the array is rotated N no of the times then A[l] will less than a[r]
        while(l<=r){
            mid = l + (r - l) / 2;
            if ( mid > 0 && nums[mid -1] > nums[mid]) return nums[mid];  //this will happen if the mid is greater than 0
            else if (nums[mid] > nums[mid + 1]) return nums[mid + 1];   // this will happen if the mid is zero and when you have two elements 5 , 3
            else if (nums[l] > nums[mid]) r = mid - 1;                  // if left is unsorted ans will be in the left
            else l = mid + 1;                                           // else right is unsorted right will have  the ans

        }return -1;
    }
}
